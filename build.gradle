buildscript {
	repositories {
		jcenter()

		mavenCentral()

		maven {
			url "http://files.minecraftforge.net/maven"
		}
	}

	dependencies {
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true
	}
}

apply plugin: "net.minecraftforge.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.sourceCompatibility = JavaVersion.VERSION_1_8
compileJava.targetCompatibility = JavaVersion.VERSION_1_8

version = "1.16.1-1.0.0.0"
group = "com.therandomlabs.utils.forge"
archivesBaseName = "trlutilsforge"

minecraft {
	mappings channel: "snapshot", version: "20200514-1.16"

	accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

	runs {
		client {
			workingDirectory project.file("run")

			property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
			property "forge.logging.console.level", "debug"

			mods {
				trlutilsforgetest {
					source sourceSets.test
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file("run")

			property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
			property "forge.logging.console.level", "debug"

			mods {
				trlutilsforgetest {
					source sourceSets.test
					source sourceSets.main
				}
			}
		}
	}
}

repositories {
	mavenCentral()

	maven {
		url "https://jitpack.io"
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:1.16.1-32.0.40"

	implementation group: "com.github.TheRandomLabs", name: "TRLUtils-Config", version: "master-SNAPSHOT", changing: true

	compileOnly "org.checkerframework:checker-qual:2.8.0"
}

jar {
	manifest {
		attributes([
				"Specification-Title": project.name,
				"Specification-Vendor": "TheRandomLabs",
				"Specification-Version": "1",
				"Implementation-Title": project.name,
				"Implementation-Version": "${version}",
				"Implementation-Vendor": "TheRandomLabs",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				"Fingerprint": project.findProperty("signSHA1") ?: ""
		])
	}
}

import net.minecraftforge.gradle.common.task.SignJar

task signJar(type: SignJar, dependsOn: jar) {
	onlyIf {
		project.hasProperty("keyStore")
	}

	keyStore = project.findProperty("keyStore")
	alias = project.findProperty("keyStoreAlias")
	storePass = project.findProperty("keyStorePass")
	keyPass = project.findProperty("keyStoreKeyPass")
	inputFile = jar.archivePath
	outputFile = jar.archivePath
}

build.dependsOn signJar
